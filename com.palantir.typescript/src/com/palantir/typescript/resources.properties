#
# Copyright 2013 Palantir Technologies, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

search.result.match = ({0,number,integer} matches)

preferences.compiler.code.gen.target = ECMAScript target version:
preferences.compiler.compile.on.save = Compile all TypeScript files on build
preferences.compiler.map.source.files = Generate corresponding .map files
preferences.compiler.module.gen.target = Module code generation:
preferences.compiler.no.lib = Do not include the default library (lib.d.ts) when compiling
preferences.compiler.remove.comments = Do not emit comments to output

preferences.compiler.ecmascript3 = 3
preferences.compiler.ecmascript5 = 5

preferences.compiler.unspecified = Unspecified
preferences.compiler.synchronous = Common JS
preferences.compiler.asynchronous = AMD

preferences.compiler.rebuild.dialog.title = Compiler Settings Changed
preferences.compiler.rebuild.dialog.message = The compiler settings have changed. A full rebuild is required for the changes to take effect. Do the full build now?
preferences.compiler.rebuild.job.name = Rebuilding

preferences.compiler.filters.inclusion.patterns.list = Inclusion filters
preferences.compiler.filters.exclusion.patterns.list=Exclusion filters
preferences.compiler.filters.dialog.newpattern.title = Add new filter
preferences.compiler.filters.dialog.newpattern.message = Enter a pattern, relative to a project root folder, for including/excluding files from TypeScript support. Allowed wildcards are '*', '?' and '**'. Examples: 'src/main/ts/**', 'src/**/*.ts'
preferences.compiler.filters.dialog.emptyPatternError= Pattern should not be empty
preferences.compiler.filters.dialog.nonRelativePatternError = Pattern should be relative
preferences.compiler.filters.dialog.duplicatePatternError = Pattern already exists.

preferences.editor.convert.tabs.to.spaces = Convert tabs to spaces
preferences.editor.indent.size = Indent size:
preferences.editor.tab.size = Tab size:

preferences.formatter.insert.space.after.comma.delimiter = Insert space after comma delimiter
preferences.formatter.insert.space.after.semicolon.in.for.statements = Insert space after semicolon in for statements
preferences.formatter.insert.space.before.and.after.binary.operators = Insert space before and after binary operators
preferences.formatter.insert.space.after.keywords.in.control.flow.statements = Insert space after keywords in control flow statements
preferences.formatter.insert.space.after.function.keyword.for.anonymous.functions = Insert space after function keyword for anonymous functions
preferences.formatter.insert.space.after.opening.and.before.closing.nonempty.parenthesis = Insert space after opening and before closing nonempty parenthesis
preferences.formatter.place.open.brace.on.new.line.for.functions = Place open brace on new line for functions
preferences.formatter.place.open.brace.on.new.line.for.control.blocks = Place open brace on new line for control blocks

wizard.refactoring.window.title = Rename TypeScript Element
