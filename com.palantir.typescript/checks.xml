<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE module PUBLIC "-//Puppy Crawl//DTD Check Configuration 1.3//EN" "http://www.puppycrawl.com/dtds/configuration_1_3.dtd">
<!--
  Copyright 2013 Palantir Technologies, Inc.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<!--
    This configuration file was written by the eclipse-cs plugin configuration editor
-->
<!--
    Checkstyle-Configuration: TypeScript Checks
    Description: none
-->
<module name="Checker">
  <property name="severity" value="warning"/>
  <module name="TreeWalker">
    <module name="AnnotationUseStyle">
      <property name="trailingArrayComma" value="ignore"/>
    </module>
    <module name="ClassTypeParameterName">
      <property name="format" value="^[A-Z][A-Z0-9]*(_[A-Z][A-Z0-9]*)*$"/>
    </module>
    <module name="DefaultComesLast"/>
    <module name="JavadocStyle"/>
    <module name="MissingDeprecated"/>
    <module name="ModifierOrder"/>
    <module name="OuterTypeFilename"/>
    <module name="PackageAnnotation"/>
    <module name="PackageDeclaration"/>
    <module name="PackageName">
      <property name="format" value="^[a-z]+(\.[a-z][a-z0-9]*)*$"/>
    </module>
    <module name="StringLiteralEquality"/>
    <module name="TypeName"/>
    <module name="UpperEll"/>
    <module name="RedundantModifier"/>
    <module name="EmptyStatement"/>
    <module name="SimplifyBooleanReturn"/>
    <module name="ArrayTypeStyle"/>
    <module name="IllegalInstantiation">
      <property name="classes" value="java.util.ArrayList"/>
      <message key="instantiation.avoid" value="Direct instantiation of {0} should be avoided. Use Google Guava's Lists or ImmutableList factory methods instead."/>
    </module>
    <module name="IllegalInstantiation">
      <property name="classes" value="java.util.HashMap"/>
      <message key="instantiation.avoid" value="Direct instantiation of {0} should be avoided. Use Google Guava's Maps or ImmutableMap factory methods instead."/>
    </module>
    <module name="IllegalInstantiation">
      <property name="classes" value="java.util.HashSet"/>
      <message key="instantiation.avoid" value="Direct instantiation of {0} should be avoided. Use Google Guava's Sets or ImmutableSet factory methods instead."/>
    </module>
    <module name="IllegalInstantiation">
      <property name="classes" value="java.util.LinkedHashSet"/>
      <message key="instantiation.avoid" value="Direct instantiation of {0} should be avoided. Use Google Guava's Sets or ImmutableSet factory methods instead."/>
    </module>
    <module name="IllegalInstantiation">
      <property name="classes" value="java.util.LinkedHashMap"/>
      <message key="instantiation.avoid" value="Direct instantiation of {0} should be avoided. Use Google Guava's Maps or ImmutableMap factory methods instead."/>
    </module>
    <module name="IllegalInstantiation">
      <property name="classes" value="java.util.TreeMap"/>
      <message key="instantiation.avoid" value="Direct instantiation of {0} should be avoided. Use Google Guava's Maps or ImmutableSortedMap factory methods instead."/>
    </module>
    <module name="IllegalInstantiation">
      <property name="classes" value="java.util.TreeSet"/>
      <message key="instantiation.avoid" value="Direct instantiation of {0} should be avoided. Use Google Guava's Sets or ImmutableSortedSet factory methods instead."/>
    </module>
    <module name="IllegalInstantiation">
      <property name="classes" value="java.util.concurrent.ConcurrentHashMap"/>
      <message key="instantiation.avoid" value="Direct instantiation of {0} should be avoided. Use Google Guava's Maps factory method or MapMaker instead."/>
    </module>
    <module name="IllegalInstantiation">
      <property name="classes" value="java.util.concurrent.CopyOnWriteArrayList"/>
      <message key="instantiation.avoid" value="Direct instantiation of {0} should be avoided. Use Google Guava's Lists factory methods instead."/>
    </module>
    <module name="EmptyForInitializerPad"/>
    <module name="SimplifyBooleanExpression"/>
    <module name="LeftCurly">
      <property name="maxLineLength" value="120"/>
      <property name="tokens" value="CLASS_DEF,CTOR_DEF,INTERFACE_DEF,LITERAL_FINALLY,METHOD_DEF"/>
    </module>
    <module name="TypecastParenPad">
      <property name="tokens" value="RPAREN,TYPECAST"/>
    </module>
    <module name="WhitespaceAfter"/>
    <module name="NoWhitespaceBefore">
      <metadata name="net.sf.eclipsecs.core.comment" value="Postfix increment/decrement"/>
      <property name="tokens" value="POST_DEC,POST_INC"/>
    </module>
    <module name="NoWhitespaceBefore">
      <metadata name="net.sf.eclipsecs.core.comment" value="Allow line breaks for semicolon and dot operator"/>
      <property name="allowLineBreaks" value="true"/>
      <property name="tokens" value="SEMI,DOT"/>
    </module>
    <module name="NoWhitespaceAfter">
      <property name="allowLineBreaks" value="false"/>
      <property name="tokens" value="BNOT,DEC,DOT,INC,LNOT,UNARY_MINUS,UNARY_PLUS"/>
    </module>
    <module name="ParenPad"/>
    <module name="WhitespaceAround">
      <property name="tokens" value="ASSIGN,BAND,BAND_ASSIGN,BOR,BOR_ASSIGN,BSR,BSR_ASSIGN,BXOR,BXOR_ASSIGN,COLON,DIV,DIV_ASSIGN,EQUAL,GE,GT,LAND,LE,LITERAL_ASSERT,LITERAL_RETURN,LOR,LT,MINUS,MINUS_ASSIGN,MOD,MOD_ASSIGN,NOT_EQUAL,PLUS,PLUS_ASSIGN,QUESTION,SL,SL_ASSIGN,SR,SR_ASSIGN,STAR,STAR_ASSIGN,LITERAL_ASSERT,TYPE_EXTENSION_AND,WILDCARD_TYPE"/>
      <property name="ignoreEnhancedForColon" value="false"/>
    </module>
    <module name="MultipleVariableDeclarations"/>
    <module name="MethodParamPad"/>
    <module name="AvoidStarImport">
      <property name="allowStaticMemberImports" value="true"/>
    </module>
    <module name="RedundantImport"/>
    <module name="ConstantName"/>
    <module name="VisibilityModifier"/>
    <module name="HideUtilityClassConstructor"/>
    <module name="FinalClass"/>
    <module name="DesignForExtension"/>
  </module>
  <module name="FileTabCharacter">
    <property name="eachLine" value="true"/>
  </module>
  <module name="NewlineAtEndOfFile">
    <property name="lineSeparator" value="lf"/>
  </module>
  <module name="RegexpSingleline">
    <property name="format" value="@return.*\.$"/>
    <property name="message" value="Please delete the period."/>
  </module>
  <module name="RegexpSingleline">
    <property name="format" value="[^\*]\s+$"/>
    <property name="message" value="Trailing whitespace is not allowed."/>
  </module>
  <module name="RegexpSingleline">
    <property name="format" value="assertEquals\(null,"/>
    <property name="message" value="Use assertNull() instead."/>
  </module>
  <module name="RegexpSingleline">
    <property name="format" value="super\(\);"/>
    <property name="message" value="This is unnecessary; please delete."/>
  </module>
  <module name="RegexpSingleline">
    <property name="format" value="^\s*\* Check "/>
    <property name="message" value="Should be: Checks"/>
  </module>
  <module name="RegexpSingleline">
    <property name="format" value="^\s*\* Create "/>
    <property name="message" value="Should be: Creates"/>
  </module>
  <module name="RegexpSingleline">
    <property name="format" value="^\s*\* Find "/>
    <property name="message" value="Should be: Finds"/>
  </module>
  <module name="RegexpSingleline">
    <property name="format" value="^\s*\* Get "/>
    <property name="message" value="Should be: Gets"/>
  </module>
  <module name="RegexpSingleline">
    <property name="format" value="^\s*\* Return "/>
    <property name="message" value="Should be: Returns"/>
  </module>
  <module name="RegexpSingleline">
    <property name="format" value="^\s*\* Set "/>
    <property name="message" value="Should be: Sets"/>
  </module>
  <module name="RegexpHeader">
    <property name="header" value="^/\*$\n^ \* Copyright \d\d\d\d Palantir Technologies, Inc.$\n^ \*$\n^ \* Licensed under the Apache License, Version 2.0 \(the &quot;License&quot;\);$\n^ \* you may not use this file except in compliance with the License.$\n^ \* You may obtain a copy of the License at$\n^ \*$\n^ \*     http://www.apache.org/licenses/LICENSE-2.0$\n^ \*$\n^ \* Unless required by applicable law or agreed to in writing, software$\n^ \* distributed under the License is distributed on an &quot;AS IS&quot; BASIS,$\n^ \* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.$\n^ \* See the License for the specific language governing permissions and$\n^ \* limitations under the License.$\n^ \*/$\n^$"/>
    <property name="fileExtensions" value=".java,.ts"/>
    <message key="header.mismatch" value="The header of this file does not match our template.  Please note that the header should have a single blank line after it."/>
  </module>
</module>
